import { useState, useEffect } from 'react';
import Svg, { Path, Ellipse } from 'react-native-svg';
import { translations } from './translations';

export default function AnimatedProgressPath({
  containerScale = 1.2,
  containerStyle,
  pathColor,
  pointerScale = 1,
  pointerColor,
  step,
}) {
  const [idx, setIdx] = useState(0);
  const [animation, setAnimation] = useState();
  const points = [65, 138, 226, 312];

  useEffect(() => {
    if (step === 0) setIdx(0);
    const interval = setInterval(() => {
      setIdx((current) => current + 1);
    }, 0);
    setAnimation(interval);
    return () => clearInterval(interval);
  }, [step]);

  useEffect(() => {
    if (idx >= translations.length - 1 || points.includes(idx) || step <= 0) return clearInterval(animation);
  }, [idx]);
  console.disableYellowBox = true;
  containerScale = containerScale < 0.1 ? 1 : containerScale;
  pointerScale = pointerScale < 0.1 ? 1 : pointerScale;

  return (
    <Svg width={130 * containerScale} height={400 * containerScale} viewBox='-16 0 200 530' style={containerStyle}>
      <Path
        d='M109.41,501C109.41,509.837,116.574,517,125.41,517C134.247,517,141.41,509.837,141.41,501C141.41,492.163,134.247,485,125.41,485C116.574,485,109.41,492.163,109.41,501ZM130.613,395.5L129.203,398.148L130.613,395.5ZM78.8325,331.5L80.7169,333.834L78.8325,331.5ZM103.528,258.5L101.263,256.534L103.528,258.5ZM21.3325,116L18.3742,116.499L21.3325,116ZM0,16C0,24.8366,7.16344,32,16,32C24.8366,32,32,24.8366,32,16C32,7.16344,24.8366,0,16,0C7.16344,0,0,7.16344,0,16ZM127.948,499.4C123.141,491.774,121.211,485.489,121.066,480.244C120.923,475.045,122.526,470.6,125.271,466.595C128.051,462.54,132,458.943,136.506,455.56C141.031,452.163,145.89,449.142,150.549,446.066C155.101,443.06,159.514,439.969,162.667,436.6C165.854,433.195,168.115,429.112,167.532,424.216C166.967,419.469,163.808,414.765,158.216,409.823C152.576,404.838,144.073,399.272,132.024,392.852L129.203,398.148C141.083,404.478,149.115,409.787,154.243,414.319C159.421,418.895,161.267,422.352,161.574,424.925C161.863,427.349,160.863,429.747,158.286,432.5C155.677,435.289,151.825,438.033,147.243,441.059C142.767,444.014,137.622,447.22,132.903,450.762C128.166,454.319,123.632,458.374,120.323,463.202C116.979,468.08,114.885,473.748,115.069,480.41C115.251,487.027,117.673,494.351,122.873,502.6L127.948,499.4ZM132.024,392.852C102.924,377.348,86.9353,364.518,79.9199,354.467C76.4439,349.487,75.3609,345.462,75.6518,342.288C75.9372,339.173,77.594,336.355,80.7169,333.834L76.9482,329.166C72.8972,332.436,70.1454,336.627,69.6768,341.74C69.2137,346.794,71.0313,352.215,74.9998,357.901C82.8733,369.182,99.9484,382.561,129.203,398.148L132.024,392.852ZM80.7169,333.834C91.3296,325.267,97.1036,317.702,99.909,310.613C102.738,303.464,102.41,297.14,101.493,291.423C101.063,288.747,100.412,285.735,99.9876,283.331C99.5318,280.748,99.2219,278.316,99.2665,275.895C99.3527,271.21,100.766,266.259,105.794,260.466L101.263,256.534C95.3409,263.356,93.3804,269.65,93.2675,275.784C93.2125,278.772,93.5969,281.643,94.079,284.374C94.5925,287.283,95.123,289.597,95.5688,292.374C96.4022,297.567,96.6002,302.668,94.33,308.405C92.0361,314.202,87.0855,320.983,76.9482,329.166L80.7169,333.834ZM105.794,260.466C123.73,239.802,128.448,222.314,124.206,207.015C120.041,192,107.457,180.04,93.1271,169.781C85.9078,164.613,78.1009,159.779,70.4632,155.148C62.7908,150.496,55.3238,146.069,48.6275,141.637C41.9268,137.202,36.1592,132.865,31.88,128.459C27.5922,124.045,25.0115,119.778,24.2908,115.501L18.3742,116.499C19.3777,122.452,22.8558,127.78,27.5761,132.64C32.305,137.508,38.495,142.126,45.316,146.64C52.1413,151.158,59.7601,155.675,67.3524,160.278C74.9795,164.903,82.6164,169.635,89.6345,174.66C103.779,184.786,114.845,195.715,118.424,208.619C121.924,221.239,118.479,236.698,101.263,256.534L105.794,260.466ZM24.2908,115.501C22.8381,106.882,25.0645,99.9792,28.6148,93.4391C30.4142,90.1242,32.5181,86.9651,34.6774,83.677C36.8069,80.4342,38.9883,77.0683,40.7616,73.5324C44.3694,66.3387,46.3563,58.2973,43.345,48.4002C40.3942,38.7022,32.7477,27.5791,18.0511,13.8107L13.9489,18.1893C28.3395,31.6709,35.1026,41.9228,37.6048,50.1467C40.0464,58.1714,38.5297,64.5988,35.3983,70.8426C33.802,74.0255,31.8049,77.1205,29.6621,80.3835C27.5491,83.6013,25.2869,86.993,23.3416,90.5766C19.4024,97.8333,16.6247,106.118,18.3742,116.499L24.2908,115.501Z'
        fill={pathColor}></Path>
      <Ellipse rx={9 * pointerScale} ry={9 * pointerScale} fill={pointerColor} transform={translations[idx]}></Ellipse>
      <Path d='M-592.3828726415326 -73.3094637447847 h1657.837643859943 v724.2396474385129 h-1657.837643859943 z M0 0 h200 v530 h-200 z'></Path>
    </Svg>
  );
}
